import { Telegraf, Context, Markup, Scenes, session } from 'telegraf';
import { Command } from '../commands/command.interface';
import { MessageSubscriber } from './subscribers/message.subscriber';
import { DataSource } from 'typeorm';
import { Event } from '../entities/Event';
import { ADMINS } from '../config';
import { WizardContext } from 'telegraf/typings/scenes';
import { MoreThan, LessThan } from 'typeorm';
import { EventParticipant, ParticipationStatus } from '../entities/EventParticipant';
import { User } from '../entities/User';
import { PaymentDetails } from '../entities/PaymentDetails';
import { ClubInfo } from '../entities/ClubInfo';

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
interface LoggingConfig {
  verbose: boolean;
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD.MM.YYYY, HH:mm
function parseDateTime(dateTimeStr: string): Date | null {
  const parts = dateTimeStr.match(/^(\d{2})\.(\d{2})\.(\d{4}), (\d{2}):(\d{2})$/);
  if (!parts) {
    return null;
  }
  const [_, day, month, year, hours, minutes] = parts.map(Number);
  // –ú–µ—Å—è—Ü—ã –≤ JS Date –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0, –ø–æ—ç—Ç–æ–º—É month - 1
  const date = new Date(year, month - 1, day, hours, minutes, 0); // –°–µ–∫—É–Ω–¥—ã —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ 0
  return date;
}

function formatDate(date: Date | null): string {
  if (!date) return '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
  const day = String(date.getDate()).padStart(2, '0');
  const month = String(date.getMonth() + 1).padStart(2, '0'); // –ú–µ—Å—è—Ü—ã –≤ JS Date –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0
  const year = date.getFullYear();
  const hours = String(date.getHours()).padStart(2, '0');
  const minutes = String(date.getMinutes()).padStart(2, '0');
  // –£–±–∏—Ä–∞–µ–º —Å–µ–∫—É–Ω–¥—ã
  return `${day}.${month}.${year}, ${hours}:${minutes}`;
}

function isAdmin(userId: number | string | undefined): boolean {
  if (!userId) return false;
  return ADMINS.includes(String(userId));
}

function isEventComplete(event: Event): boolean {
  return !!(
    event.title &&
    event.description &&
    event.startDate &&
    event.endDate
  );
}

interface PaymentDetailsSceneState {
  title: string;
  detailsId?: number;
  editing?: boolean;
}

interface EventSceneState {
  event: any;
  eventId?: number;
  editingField?: string;
  deleting?: boolean;
}

interface WizardSessionData extends Scenes.WizardSessionData {
  state: PaymentDetailsSceneState | EventSceneState;
}

type BotContext = Scenes.WizardContext<WizardSessionData> & {
  match?: RegExpMatchArray;
};

export class TelegramBot {
  private readonly bot: Telegraf<BotContext>;
  private isInitialized = false;
  private stage!: Scenes.Stage<BotContext>;
  private readonly dataSource: DataSource;
  private readonly loggingConfig: LoggingConfig;

  constructor(private readonly token: string, dataSource: DataSource, loggingConfig: LoggingConfig = { verbose: false }) {
    this.bot = new Telegraf<BotContext>(token);
    this.dataSource = dataSource;
    this.loggingConfig = loggingConfig;
    this.setupErrorHandling();

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
    this.bot.telegram.setMyCommands([
      { command: 'start', description: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' },
      { command: 'events', description: 'üìÖ –°–ø–∏—Å–æ–∫ –≤—Å—Ç—Ä–µ—á' },
      { command: 'my_events', description: 'üë• –ú–æ–∏ –≤—Å—Ç—Ä–µ—á–∏' },
      { command: 'help', description: '‚ùì –ü–æ–º–æ—â—å' }
    ]);
  }

  public addAdminFeatures() {
    // --- WizardScene –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏ ---
    const createEventWizard = new Scenes.WizardScene<BotContext>(
      'create-event-wizard',
      async (ctx: BotContext) => {
        if (!isAdmin(ctx.from?.id)) {
          await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
          return ctx.scene.leave();
        }
        const state = ctx.scene.state as EventSceneState;
        state.event = {};
        await ctx.reply('–≠—Ç–∞–ø 1/7: –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏:');
        return ctx.wizard.next();
      },
      async (ctx: any) => {
        try {
          ctx.scene.session.event.title = ctx.message.text;
          await ctx.reply(`–ù–∞–∑–≤–∞–Ω–∏–µ: ${ctx.scene.session.event.title}\n\n–≠—Ç–∞–ø 2/7: –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ (–î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:–ú–ú):`);
          return ctx.wizard.next();
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—Å—Ç—Ä–µ—á–∏:', error);
          await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—Å—Ç—Ä–µ—á–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
          return ctx.scene.leave();
        }
      },
      async (ctx: any) => {
        try {
          const parsedDate = parseDateTime(ctx.message.text);
          if (!parsedDate) {
            await ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:–ú–ú:');
            return;
          }
          ctx.scene.session.event.startDate = parsedDate;
          await ctx.reply(`–ù–∞–∑–≤–∞–Ω–∏–µ: ${ctx.scene.session.event.title}\n–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(ctx.scene.session.event.startDate)}\n\n–≠—Ç–∞–ø 3/7: –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è (–î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:–ú–ú):`);
          return ctx.wizard.next();
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞:', error);
          await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
          return ctx.scene.leave();
        }
      },
      async (ctx: any) => {
        const parsedDate = parseDateTime(ctx.message.text);
        if (!parsedDate) {
          await ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:–ú–ú');
          return;
        }
        ctx.scene.session.event.endDate = parsedDate;
        await ctx.reply(`–ù–∞–∑–≤–∞–Ω–∏–µ: ${ctx.scene.session.event.title}\n–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(ctx.scene.session.event.startDate)}\n–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(ctx.scene.session.event.endDate)}\n\n–≠—Ç–∞–ø 4/7: –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏:`);
        return ctx.wizard.next();
      },
      async (ctx: any) => {
        ctx.scene.session.event.description = ctx.message.text;
        await ctx.reply(
          `–ù–∞–∑–≤–∞–Ω–∏–µ: ${ctx.scene.session.event.title}\n` +
          `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(ctx.scene.session.event.startDate)}\n` +
          `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(ctx.scene.session.event.endDate)}\n` +
          `–û–ø–∏—Å–∞–Ω–∏–µ: ${ctx.scene.session.event.description}\n\n` +
          `–≠—Ç–∞–ø 5/7: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–ø–ª–∞—Ç—ã\n` +
          `–†–∞–∑—Ä–µ—à–∏—Ç—å –æ–ø–ª–∞—Ç—É –Ω–∞ –º–µ—Å—Ç–µ?`,
          Markup.inlineKeyboard([
            [Markup.button.callback('‚úÖ –î–∞', 'payment_onsite_yes'), 
             Markup.button.callback('‚ùå –ù–µ—Ç', 'payment_onsite_no')]
          ])
        );
        return ctx.wizard.next();
      },
      async (ctx: any) => {
        if (!ctx.callbackQuery) {
          await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞');
          return;
        }

        const allowOnSite = ctx.callbackQuery.data === 'payment_onsite_yes';
        ctx.scene.session.event.allowOnSitePayment = allowOnSite;
        await ctx.answerCbQuery();
        await ctx.editMessageText(
          `–ù–∞–∑–≤–∞–Ω–∏–µ: ${ctx.scene.session.event.title}\n` +
          `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(ctx.scene.session.event.startDate)}\n` +
          `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(ctx.scene.session.event.endDate)}\n` +
          `–û–ø–∏—Å–∞–Ω–∏–µ: ${ctx.scene.session.event.description}\n` +
          `–û–ø–ª–∞—Ç–∞ –Ω–∞ –º–µ—Å—Ç–µ: ${allowOnSite ? '‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∞' : '‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω–∞'}\n\n` +
          `–≠—Ç–∞–ø 6/8: –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ª–Ω–æ–π –æ–ø–ª–∞—Ç—ã (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ, –±–µ–∑ –≤–∞–ª—é—Ç—ã):`
        );
        return ctx.wizard.next();
      },
      async (ctx: any) => {
        const fullPaymentAmount = parseFloat(ctx.message.text);
        if (isNaN(fullPaymentAmount) || fullPaymentAmount < 0) {
          await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ):');
          return;
        }
        ctx.scene.session.event.fullPaymentAmount = fullPaymentAmount;
        await ctx.reply(
          `–ù–∞–∑–≤–∞–Ω–∏–µ: ${ctx.scene.session.event.title}\n` +
          `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(ctx.scene.session.event.startDate)}\n` +
          `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(ctx.scene.session.event.endDate)}\n` +
          `–û–ø–∏—Å–∞–Ω–∏–µ: ${ctx.scene.session.event.description}\n` +
          `–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ: ${ctx.scene.session.event.allowOnSitePayment ? '‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∞' : '‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω–∞'}\n` +
          `–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ: ${ctx.scene.session.event.fullPaymentAmount} –≥—Ä–Ω.\n\n` +
          `–≠—Ç–∞–ø 7/8: –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —É—á–∞—Å—Ç–∏—è –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ, –±–µ–∑ –≤–∞–ª—é—Ç—ã, –∏–ª–∏ 0 –µ—Å–ª–∏ –æ–ø–ª–∞—Ç–∞ –∑–∞—Ä–∞–Ω–µ–µ –Ω–µ –≤–æ–∑–º–æ–∂–Ω–∞):`
        );
        return ctx.wizard.next();
      },
      async (ctx: any) => {
        try {
          const advancePaymentAmount = parseFloat(ctx.message.text);
          if (isNaN(advancePaymentAmount) || advancePaymentAmount < 0) {
            await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ):');
            return;
          }
          
          // –ï—Å–ª–∏ —Å—É–º–º–∞ 0, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º null
          ctx.scene.session.event.advancePaymentAmount = advancePaymentAmount === 0 ? null : advancePaymentAmount;
          
          if (advancePaymentAmount > 0) {
            await ctx.reply(
              `–ù–∞–∑–≤–∞–Ω–∏–µ: ${ctx.scene.session.event.title}\n` +
              `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(ctx.scene.session.event.startDate)}\n` +
              `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(ctx.scene.session.event.endDate)}\n` +
              `–û–ø–∏—Å–∞–Ω–∏–µ: ${ctx.scene.session.event.description}\n` +
              `–û–ø–ª–∞—Ç–∞ –Ω–∞ –º–µ—Å—Ç–µ: ${ctx.scene.session.event.allowOnSitePayment ? '‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∞' : '‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω–∞'}\n` +
              `–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ: ${ctx.scene.session.event.fullPaymentAmount} –≥—Ä–Ω.\n` +
              `–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ: ${ctx.scene.session.event.advancePaymentAmount} –≥—Ä–Ω.\n\n` +
              `–≠—Ç–∞–ø 8/8: –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –∫—Ä–∞–π–Ω–µ–≥–æ —Å—Ä–æ–∫–∞ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ (–î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:–ú–ú):`,
              Markup.inlineKeyboard([
                [Markup.button.callback('‚è∞ –ó–∞ —Å—É—Ç–∫–∏ –¥–æ –Ω–∞—á–∞–ª–∞ –≤—Å—Ç—Ä–µ—á–∏', 'set_deadline_day_before')]
              ])
            );
            return ctx.wizard.next();
          } else {
            ctx.scene.session.event.advancePaymentDeadline = null;
            // –°–æ–∑–¥–∞–µ–º –≤—Å—Ç—Ä–µ—á—É —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π
            const event = new Event();
            Object.assign(event, ctx.scene.session.event);
            await this.dataSource.manager.save(event);
            
            const buttons = [
              [Markup.button.callback('–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', `publish_event_${event.id}`), 
               Markup.button.callback('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', `edit_event_${event.id}`)]
            ];
            
            await ctx.reply(
              `–í—Å—Ç—Ä–µ—á–∞ —Å–æ–∑–¥–∞–Ω–∞!\n\n` +
              `–ù–∞–∑–≤–∞–Ω–∏–µ: ${event.title}\n` +
              `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
              `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
              `–û–ø–∏—Å–∞–Ω–∏–µ: ${event.description}\n` +
              `–û–ø–ª–∞—Ç–∞ –Ω–∞ –º–µ—Å—Ç–µ: ${event.allowOnSitePayment ? '‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∞' : '‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω–∞'}\n` +
              `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
              `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? ` (–Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)})` : ''}\n` : ''}` +
              `${event.fullPaymentAmount ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã${event.advancePaymentDeadline ? ` –ø–æ—Å–ª–µ ${formatDate(event.advancePaymentDeadline)}` : ''}${event.allowOnSitePayment ? ` –∏–ª–∏ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ` : ''}\n` : ''}` +
              `\n–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫'}`,
              Markup.inlineKeyboard(buttons)
            );
            return ctx.scene.leave();
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤—Å—Ç—Ä–µ—á–∏:', error);
          await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤—Å—Ç—Ä–µ—á–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
          return ctx.scene.leave();
        }
      },
      async (ctx: any) => {
        try {
          let deadline: Date | null = null;

          if (ctx.callbackQuery && ctx.callbackQuery.data === 'set_deadline_day_before') {
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ–¥–ª–∞–π–Ω –∑–∞ —Å—É—Ç–∫–∏ –¥–æ –Ω–∞—á–∞–ª–∞ –≤—Å—Ç—Ä–µ—á–∏
            deadline = new Date(ctx.scene.session.event.startDate);
            deadline.setDate(deadline.getDate() - 1);
            await ctx.answerCbQuery();
          } else {
            // –ü–∞—Ä—Å–∏–º –≤–≤–µ–¥–µ–Ω–Ω—É—é –¥–∞—Ç—É
            deadline = parseDateTime(ctx.message.text);
            if (!deadline) {
              await ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:–ú–ú:');
              return;
            }
          }

          ctx.scene.session.event.advancePaymentDeadline = deadline;

          // –°–æ–∑–¥–∞–µ–º –≤—Å—Ç—Ä–µ—á—É —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π
          const event = new Event();
          Object.assign(event, ctx.scene.session.event);
          await this.dataSource.manager.save(event);
          
          const buttons = [
            [Markup.button.callback('–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', `publish_event_${event.id}`), 
             Markup.button.callback('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', `edit_event_${event.id}`)]
          ];
          
          await ctx.reply(
            `–í—Å—Ç—Ä–µ—á–∞ —Å–æ–∑–¥–∞–Ω–∞!\n\n` +
            `–ù–∞–∑–≤–∞–Ω–∏–µ: ${event.title}\n` +
            `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
            `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
            `–û–ø–∏—Å–∞–Ω–∏–µ: ${event.description}\n` +
            `–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ: ${event.allowOnSitePayment ? '‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∞' : '‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω–∞'}\n` +
            `–û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ: ${event.fullPaymentAmount} –≥—Ä–Ω.\n` +
            `–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ: ${event.advancePaymentAmount} –≥—Ä–Ω.\n` +
            `–ö—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ –æ–ø–ª–∞—Ç–∏ –∑–∞—Ä–∞–Ω–µ–µ: ${formatDate(event.advancePaymentDeadline)}\n` +
            `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
            `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? ` (–Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)})` : ''}\n` : ''}` +
            `${event.fullPaymentAmount ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã${event.advancePaymentDeadline ? ` –ø–æ—Å–ª–µ ${formatDate(event.advancePaymentDeadline)}` : ''}${event.allowOnSitePayment ? ` –∏–ª–∏ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ` : ''}\n` : ''}` +
            `\n–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫'}`,
            Markup.inlineKeyboard(buttons)
          );
          return ctx.scene.leave();
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤—Å—Ç—Ä–µ—á–∏:', error);
          await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤—Å—Ç—Ä–µ—á–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
          return ctx.scene.leave();
        }
      }
    );

    // --- WizardScene –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏ ---
    const editEventWizard = new Scenes.WizardScene<BotContext>(
      'edit-event-wizard',
      async (ctx: BotContext) => {
        if (!isAdmin(ctx.from?.id)) {
          await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
          return ctx.scene.leave();
        }
        const state = ctx.scene.state as EventSceneState;
        const eventId = state.eventId;
        const event = await this.dataSource.manager.findOneBy(Event, { id: eventId });
        
        if (!event) {
          await ctx.reply('–í—Å—Ç—Ä–µ—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
          return ctx.scene.leave();
        }

        const getButtons = (event: Event) => [
          [Markup.button.callback('‚úèÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ', 'edit_title')],
          [Markup.button.callback('‚úèÔ∏è –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞', 'edit_start_date')],
          [Markup.button.callback('‚úèÔ∏è –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è', 'edit_end_date')],
          [Markup.button.callback('‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ', 'edit_description')],
          [Markup.button.callback(`‚úèÔ∏è –í–æ–∑–º–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ: ${event.allowOnSitePayment ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`, 'edit_onsite_payment')],
          [Markup.button.callback('‚úèÔ∏è –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ', 'edit_full_payment')],
          [Markup.button.callback('‚úèÔ∏è –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ', 'edit_advance_payment')],
          [Markup.button.callback('‚úèÔ∏è –°—Ä–æ–∫ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ', 'edit_advance_deadline')],
          [Markup.button.callback(event.isPublished ? 'üìù –°–¥–µ–ª–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫–æ–º' : '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', 'toggle_publish')],
          [Markup.button.callback(event.isCancelled ? '‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É' : '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É', 'toggle_cancel')],
          [Markup.button.callback('üóë –£–¥–∞–ª–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É', 'delete_event')],
          [Markup.button.callback('üìã –í—Å—Ç—Ä–µ—á–∏', 'admin_events'), 
           Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
        ];

        await ctx.reply(
          `–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏:\n\n` +
          `–ù–∞–∑–≤–∞–Ω–∏–µ: ${event.title}\n` +
          `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
          `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
          `–û–ø–∏—Å–∞–Ω–∏–µ: ${event.description}\n` +
          `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
          `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? ` (–Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)})` : ''}\n` : ''}` +
          `${event.fullPaymentAmount ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã${event.advancePaymentDeadline ? ` –ø–æ—Å–ª–µ ${formatDate(event.advancePaymentDeadline)}` : ''}${event.allowOnSitePayment ? ` –∏–ª–∏ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ` : ''}\n` : ''}` +
          `\n–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫'}\n` +
          `–û—Ç–º–µ–Ω–µ–Ω–∞: ${event.isCancelled ? '‚ùå –î–∞' : '‚úÖ –ù–µ—Ç'}\n\n` +
          `–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:`,
          Markup.inlineKeyboard(getButtons(event))
        );
        return ctx.wizard.next();
      },
      async (ctx: any) => {
        if (!ctx.callbackQuery) {
          return;
        }

        const eventId = ctx.scene.state.eventId;
        const event = await this.dataSource.manager.findOneBy(Event, { id: eventId });

        if (!event) {
          await ctx.reply('–í—Å—Ç—Ä–µ—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
          return ctx.scene.leave();
        }

        const getButtons = (event: Event) => [
          [Markup.button.callback('‚úèÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ', 'edit_title')],
          [Markup.button.callback('‚úèÔ∏è –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞', 'edit_start_date')],
          [Markup.button.callback('‚úèÔ∏è –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è', 'edit_end_date')],
          [Markup.button.callback('‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ', 'edit_description')],
          [Markup.button.callback(`‚úèÔ∏è –í–æ–∑–º–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ: ${event.allowOnSitePayment ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`, 'edit_onsite_payment')],
          [Markup.button.callback('‚úèÔ∏è –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ', 'edit_full_payment')],
          [Markup.button.callback('‚úèÔ∏è –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ', 'edit_advance_payment')],
          [Markup.button.callback('‚úèÔ∏è –°—Ä–æ–∫ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ', 'edit_advance_deadline')],
          [Markup.button.callback(event.isPublished ? 'üìù –°–¥–µ–ª–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫–æ–º' : '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', 'toggle_publish')],
          [Markup.button.callback(event.isCancelled ? '‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É' : '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É', 'toggle_cancel')],
          [Markup.button.callback('üóë –£–¥–∞–ª–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É', 'delete_event')],
          [Markup.button.callback('üìã –í—Å—Ç—Ä–µ—á–∏', 'admin_events'), 
           Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
        ];

        const action = ctx.callbackQuery.data;

        switch (action) {
          case 'edit_title':
            ctx.scene.state.editingField = 'title';
            await ctx.reply(
              `–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ${event.title}\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:`,
              Markup.inlineKeyboard([[Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', 'cancel_edit')]])
            );
            break;
          case 'edit_start_date':
            ctx.scene.state.editingField = 'startDate';
            await ctx.reply(
              `–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:–ú–ú:`,
              Markup.inlineKeyboard([[Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', 'cancel_edit')]])
            );
            break;
          case 'edit_end_date':
            ctx.scene.state.editingField = 'endDate';
            await ctx.reply(
              `–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:–ú–ú:`,
              Markup.inlineKeyboard([[Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', 'cancel_edit')]])
            );
            break;
          case 'edit_description':
            ctx.scene.state.editingField = 'description';
            await ctx.reply(
              `–¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: ${event.description}\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:`,
              Markup.inlineKeyboard([[Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', 'cancel_edit')]])
            );
            break;
          case 'edit_onsite_payment':
            if (!ctx.callbackQuery) {
              return;
            }
            event.allowOnSitePayment = !event.allowOnSitePayment;
            await this.dataSource.manager.save(event);
            await ctx.answerCbQuery(event.allowOnSitePayment ? '‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞' : '‚ùå –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ –∑–∞–ø—Ä–µ—â–µ–Ω–∞');
            
            await ctx.editMessageText(
              `–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏:\n\n` +
              `–ù–∞–∑–≤–∞–Ω–∏–µ: ${event.title}\n` +
              `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
              `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
              `–û–ø–∏—Å–∞–Ω–∏–µ: ${event.description}\n` +
              `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
              `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? ` (–Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)})` : ''}\n` : ''}` +
              `${event.fullPaymentAmount ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã${event.advancePaymentDeadline ? ` –ø–æ—Å–ª–µ ${formatDate(event.advancePaymentDeadline)}` : ''}${event.allowOnSitePayment ? ` –∏–ª–∏ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ` : ''}\n` : ''}` +
              `\n–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫'}\n` +
              `–û—Ç–º–µ–Ω–µ–Ω–∞: ${event.isCancelled ? '‚ùå –î–∞' : '‚úÖ –ù–µ—Ç'}\n\n` +
              `–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:`,
              Markup.inlineKeyboard(getButtons(event))
            );
            return;
          case 'edit_full_payment':
            ctx.scene.state.editingField = 'fullPaymentAmount';
            await ctx.reply(
              `–¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ: ${event.fullPaymentAmount} –≥—Ä–Ω.\n` +
              `–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ, –±–µ–∑ –≤–∞–ª—é—Ç—ã):`,
              Markup.inlineKeyboard([[Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', 'cancel_edit')]])
            );
            break;
          case 'edit_advance_payment':
            ctx.scene.state.editingField = 'advancePaymentAmount';
            await ctx.reply(
              `–¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ: ${event.advancePaymentAmount ? `${event.advancePaymentAmount} –≥—Ä–Ω.` : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞'}\n` +
              `–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ, –±–µ–∑ –≤–∞–ª—é—Ç—ã, –∏–ª–∏ 0 —á—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å):`,
              Markup.inlineKeyboard([[Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', 'cancel_edit')]])
            );
            break;
          case 'edit_advance_deadline':
            if (!event.advancePaymentAmount) {
              await ctx.answerCbQuery('–°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ');
              return;
            }
            ctx.scene.state.editingField = 'advancePaymentDeadline';
            await ctx.reply(
              `–¢–µ–∫—É—â–∏–π —Å—Ä–æ–∫ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ: ${event.advancePaymentDeadline ? formatDate(event.advancePaymentDeadline) : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}\n` +
              `–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è (–î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:–ú–ú):`,
              Markup.inlineKeyboard([
                [Markup.button.callback('‚è∞ –ó–∞ —Å—É—Ç–∫–∏ –¥–æ –Ω–∞—á–∞–ª–∞ –≤—Å—Ç—Ä–µ—á–∏', 'set_deadline_day_before')],
                [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', 'cancel_edit')]
              ])
            );
            break;
          case 'toggle_publish':
            if (!isEventComplete(event)) {
              await ctx.answerCbQuery('–ù–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π.');
              return;
            }
            event.isPublished = !event.isPublished;
            await this.dataSource.manager.save(event);
            await ctx.answerCbQuery(event.isPublished ? '–í—Å—Ç—Ä–µ—á–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!' : '–í—Å—Ç—Ä–µ—á–∞ —Å–¥–µ–ª–∞–Ω–∞ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–º');
            
            await ctx.editMessageText(
              `–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏:\n\n` +
              `–ù–∞–∑–≤–∞–Ω–∏–µ: ${event.title}\n` +
              `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
              `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
              `–û–ø–∏—Å–∞–Ω–∏–µ: ${event.description}\n` +
              `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
              `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? ` (–Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)})` : ''}\n` : ''}` +
              `${event.fullPaymentAmount ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã${event.advancePaymentDeadline ? ` –ø–æ—Å–ª–µ ${formatDate(event.advancePaymentDeadline)}` : ''}${event.allowOnSitePayment ? ` –∏–ª–∏ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ` : ''}\n` : ''}` +
              `\n–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫'}\n` +
              `–û—Ç–º–µ–Ω–µ–Ω–∞: ${event.isCancelled ? '‚ùå –î–∞' : '‚úÖ –ù–µ—Ç'}\n\n` +
              `–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:`,
              Markup.inlineKeyboard(getButtons(event))
            );
            return;
          case 'toggle_cancel':
            event.isCancelled = !event.isCancelled;
            await this.dataSource.manager.save(event);
            await ctx.answerCbQuery(event.isCancelled ? '–í—Å—Ç—Ä–µ—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!' : '–í—Å—Ç—Ä–µ—á–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
            
            await ctx.editMessageText(
              `–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏:\n\n` +
              `–ù–∞–∑–≤–∞–Ω–∏–µ: ${event.title}\n` +
              `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
              `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
              `–û–ø–∏—Å–∞–Ω–∏–µ: ${event.description}\n` +
              `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
              `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? ` (–Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)})` : ''}\n` : ''}` +
              `${event.fullPaymentAmount ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã${event.advancePaymentDeadline ? ` –ø–æ—Å–ª–µ ${formatDate(event.advancePaymentDeadline)}` : ''}${event.allowOnSitePayment ? ` –∏–ª–∏ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ` : ''}\n` : ''}` +
              `\n–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫'}\n` +
              `–û—Ç–º–µ–Ω–µ–Ω–∞: ${event.isCancelled ? '‚ùå –î–∞' : '‚úÖ –ù–µ—Ç'}\n\n` +
              `–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:`,
              Markup.inlineKeyboard(getButtons(event))
            );
            return;
          case 'delete_event':
            ctx.scene.state.deleting = true;
            await ctx.reply(
              '‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ!\n' +
              '–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏ –≤–≤–µ–¥–∏—Ç–µ –ø–∏–Ω–∫–æ–¥:',
              Markup.inlineKeyboard([[Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ', 'cancel_delete')]])
            );
            return ctx.wizard.next();
          case 'cancel_delete':
            ctx.scene.state.deleting = false;
            await ctx.reply('‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.');
            return ctx.wizard.back();
          case 'cancel_edit':
            await ctx.reply('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.');
            return ctx.wizard.back();
          case 'main_menu':
            await ctx.scene.leave();
            await ctx.scene.enter('main-menu');
            return;
          case 'admin_events':
            await ctx.scene.leave();
            await ctx.editMessageText(
              '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤—Å—Ç—Ä–µ—á:',
              Markup.inlineKeyboard([
                [Markup.button.callback('üìÖ –ë–ª–∏–∂–∞–π—à–∏–µ', 'admin_upcoming_events'),
                 Markup.button.callback('üìÖ –ü—Ä–æ—à–µ–¥—à–∏–µ', 'admin_past_events')],
                [Markup.button.callback('üìÖ –í—Å–µ', 'admin_all_events')],
                [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'admin')]
              ])
            );
            return;
          case 'set_onsite_yes':
            event.allowOnSitePayment = true;
            await this.dataSource.manager.save(event);
            await ctx.answerCbQuery('‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞');
            
            await ctx.editMessageText(
              `–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏:\n\n` +
              `–ù–∞–∑–≤–∞–Ω–∏–µ: ${event.title}\n` +
              `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
              `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
              `–û–ø–∏—Å–∞–Ω–∏–µ: ${event.description}\n` +
              `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
              `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? ` (–Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)})` : ''}\n` : ''}` +
              `${event.fullPaymentAmount ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã${event.advancePaymentDeadline ? ` –ø–æ—Å–ª–µ ${formatDate(event.advancePaymentDeadline)}` : ''}${event.allowOnSitePayment ? ` –∏–ª–∏ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ` : ''}\n` : ''}` +
              `\n–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫'}\n` +
              `–û—Ç–º–µ–Ω–µ–Ω–∞: ${event.isCancelled ? '‚ùå –î–∞' : '‚úÖ –ù–µ—Ç'}\n\n` +
              `–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:`,
              Markup.inlineKeyboard(getButtons(event))
            );
            return;
          case 'set_onsite_no':
            event.allowOnSitePayment = false;
            await this.dataSource.manager.save(event);
            await ctx.answerCbQuery('‚ùå –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ –∑–∞–ø—Ä–µ—â–µ–Ω–∞');
            
            await ctx.editMessageText(
              `–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏:\n\n` +
              `–ù–∞–∑–≤–∞–Ω–∏–µ: ${event.title}\n` +
              `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
              `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
              `–û–ø–∏—Å–∞–Ω–∏–µ: ${event.description}\n` +
              `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
              `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? ` (–Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)})` : ''}\n` : ''}` +
              `${event.fullPaymentAmount ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã${event.advancePaymentDeadline ? ` –ø–æ—Å–ª–µ ${formatDate(event.advancePaymentDeadline)}` : ''}${event.allowOnSitePayment ? ` –∏–ª–∏ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ` : ''}\n` : ''}` +
              `\n–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫'}\n` +
              `–û—Ç–º–µ–Ω–µ–Ω–∞: ${event.isCancelled ? '‚ùå –î–∞' : '‚úÖ –ù–µ—Ç'}\n\n` +
              `–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:`,
              Markup.inlineKeyboard(getButtons(event))
            );
            return;
          case 'set_deadline_day_before':
            const deadline = new Date(event.startDate);
            deadline.setDate(deadline.getDate() - 1);
            event.advancePaymentDeadline = deadline;
            await this.dataSource.manager.save(event);
            await ctx.answerCbQuery('‚úÖ –°—Ä–æ–∫ –æ–ø–ª–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∑–∞ —Å—É—Ç–∫–∏ –¥–æ –Ω–∞—á–∞–ª–∞ –≤—Å—Ç—Ä–µ—á–∏');
            
            await ctx.editMessageText(
              `–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏:\n\n` +
              `–ù–∞–∑–≤–∞–Ω–∏–µ: ${event.title}\n` +
              `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
              `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
              `–û–ø–∏—Å–∞–Ω–∏–µ: ${event.description}\n` +
              `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
              `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? ` (–Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)})` : ''}\n` : ''}` +
              `${event.fullPaymentAmount ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã${event.advancePaymentDeadline ? ` –ø–æ—Å–ª–µ ${formatDate(event.advancePaymentDeadline)}` : ''}${event.allowOnSitePayment ? ` –∏–ª–∏ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ` : ''}\n` : ''}` +
              `\n–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫'}\n` +
              `–û—Ç–º–µ–Ω–µ–Ω–∞: ${event.isCancelled ? '‚ùå –î–∞' : '‚úÖ –ù–µ—Ç'}\n\n` +
              `–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:`,
              Markup.inlineKeyboard(getButtons(event))
            );
            return;
        }
        return ctx.wizard.next();
      },
      async (ctx: any) => {
        // –ï—Å–ª–∏ —ç—Ç–æ –≤–≤–æ–¥ –ø–∏–Ω–∫–æ–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        if (ctx.scene.state.deleting) {
          const pin = ctx.message.text;
          if (pin === '7777') {
            const eventId = ctx.scene.state.eventId;
            const event = await this.dataSource.manager.findOneBy(Event, { id: eventId });
            if (event) {
              await this.dataSource.manager.remove(event);
              await ctx.reply('‚úÖ –í—Å—Ç—Ä–µ—á–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.');
              await ctx.scene.leave();
              await ctx.scene.enter('main-menu');
            } else {
              await ctx.reply('‚ùå –í—Å—Ç—Ä–µ—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
              return ctx.scene.leave();
            }
          } else {
            await ctx.reply('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∏–Ω–∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ.');
            return;
          }
          return;
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–µ–π
        const eventId = ctx.scene.state.eventId;
        const event = await this.dataSource.manager.findOneBy(Event, { id: eventId });
        const field = ctx.scene.state.editingField;
        const newValue = ctx.message.text;

        if (!event) {
          await ctx.reply('–í—Å—Ç—Ä–µ—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
          return ctx.scene.leave();
        }

        try {
          switch (field) {
            case 'title':
              event.title = newValue;
              break;
            case 'startDate':
              const parsedStartDate = parseDateTime(newValue);
              if (!parsedStartDate) {
                await ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:–ú–ú:');
                return;
              }
              event.startDate = parsedStartDate;
              break;
            case 'endDate':
              const parsedEndDate = parseDateTime(newValue);
              if (!parsedEndDate) {
                await ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:–ú–ú:');
                return;
              }
              event.endDate = parsedEndDate;
              break;
            case 'description':
              event.description = newValue;
              break;
            case 'fullPaymentAmount':
              const fullAmount = parseFloat(newValue);
              if (isNaN(fullAmount) || fullAmount < 0) {
                await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ):');
                return;
              }
              event.fullPaymentAmount = fullAmount;
              break;
            case 'advancePaymentAmount':
              const advanceAmount = parseFloat(newValue);
              if (isNaN(advanceAmount) || advanceAmount < 0) {
                await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ):');
                return;
              }
              event.advancePaymentAmount = advanceAmount === 0 ? null : advanceAmount;
              if (advanceAmount === 0) {
                event.advancePaymentDeadline = null;
              }
              break;
            case 'advancePaymentDeadline':
              const parsedDeadline = parseDateTime(newValue);
              if (!parsedDeadline) {
                await ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:–ú–ú:');
                return;
              }
              event.advancePaymentDeadline = parsedDeadline;
              break;
          }

          await this.dataSource.manager.save(event);
          await ctx.reply('–ü–æ–ª–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!');
          
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å—Ç—Ä–µ—á–µ
          const buttons = [
            [Markup.button.callback('‚úèÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ', 'edit_title')],
            [Markup.button.callback('‚úèÔ∏è –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞', 'edit_start_date')],
            [Markup.button.callback('‚úèÔ∏è –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è', 'edit_end_date')],
            [Markup.button.callback('‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ', 'edit_description')],
            [Markup.button.callback(`‚úèÔ∏è –í–æ–∑–º–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ: ${event.allowOnSitePayment ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`, 'edit_onsite_payment')],
            [Markup.button.callback('‚úèÔ∏è –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ', 'edit_full_payment')],
            [Markup.button.callback('‚úèÔ∏è –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∑–∞—Ä–∞–Ω–µ–µ', 'edit_advance_payment')],
            [Markup.button.callback('‚úèÔ∏è –°—Ä–æ–∫ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ', 'edit_advance_deadline')],
            [Markup.button.callback(event.isPublished ? 'üìù –°–¥–µ–ª–∞—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫–æ–º' : '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', 'toggle_publish')],
            [Markup.button.callback(event.isCancelled ? '‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É' : '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É', 'toggle_cancel')],
            [Markup.button.callback('üóë –£–¥–∞–ª–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É', 'delete_event')],
            [Markup.button.callback('üìã –í—Å—Ç—Ä–µ—á–∏', 'admin_events'), 
             Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
          ];

          await ctx.reply(
            `–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å—Ç—Ä–µ—á–µ:\n\n` +
            `–ù–∞–∑–≤–∞–Ω–∏–µ: ${event.title}\n` +
            `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
            `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
            `–û–ø–∏—Å–∞–Ω–∏–µ: ${event.description}\n` +
            `–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫'}\n` +
            `–û—Ç–º–µ–Ω–µ–Ω–∞: ${event.isCancelled ? '‚ùå –î–∞' : '‚úÖ –ù–µ—Ç'}\n\n` +
            `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
            `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? ` (–Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)})` : ''}\n` : ''}` +
            `${event.fullPaymentAmount ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã${event.advancePaymentDeadline ? ` –ø–æ—Å–ª–µ ${formatDate(event.advancePaymentDeadline)}` : ''}${event.allowOnSitePayment ? ` –∏–ª–∏ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ` : ''}\n` : ''}` +
            `\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:`,
            Markup.inlineKeyboard(buttons)
          );
          return ctx.wizard.back();
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è:', error);
          await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
          return ctx.wizard.back();
        }
      }
    );

    // --- BaseScene –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é ---
    const mainMenuScene = new Scenes.BaseScene<BotContext>('main-menu');

    // --- WizardScene –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏ ---
    const paymentDetailsScene = new Scenes.WizardScene<BotContext>(
      'payment-details',
      async (ctx: BotContext) => {
        if (!isAdmin(ctx.from?.id)) {
          await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
          return ctx.scene.leave();
        }

        const state = ctx.scene.state as PaymentDetailsSceneState;

        if (state.editing) {
          const details = await this.dataSource.manager.findOneBy(PaymentDetails, { id: state.detailsId });
          if (!details) {
            await ctx.reply('–†–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
            return ctx.scene.leave();
          }
          state.title = details.title;
          await ctx.reply(`–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ${details.title}\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤:`);
        } else {
          state.title = '';
          await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤:');
        }
        return ctx.wizard.next();
      },
      async (ctx: BotContext) => {
        if (!ctx.message || !('text' in ctx.message)) {
          await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.');
          return;
        }

        const state = ctx.scene.state as PaymentDetailsSceneState;
        state.title = ctx.message.text;

        if (state.editing) {
          const details = await this.dataSource.manager.findOneBy(PaymentDetails, { id: state.detailsId });
          if (!details) {
            await ctx.reply('–†–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
            return ctx.scene.leave();
          }
          await ctx.reply(
            `–¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: ${details.description}\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤:`,
            Markup.inlineKeyboard([[Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_payment_details')]])
          );
        } else {
          await ctx.reply(
            '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤:',
            Markup.inlineKeyboard([[Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_payment_details')]])
          );
        }
        return ctx.wizard.next();
      },
      async (ctx: BotContext) => {
        if (ctx.callbackQuery && 'data' in ctx.callbackQuery && ctx.callbackQuery.data === 'cancel_payment_details') {
          await ctx.answerCbQuery();
          await ctx.reply('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞');
          return ctx.scene.leave();
        }

        if (!ctx.message || !('text' in ctx.message)) {
          await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.');
          return;
        }

        const state = ctx.scene.state as PaymentDetailsSceneState;

        if (state.editing) {
          const details = await this.dataSource.manager.findOneBy(PaymentDetails, { id: state.detailsId });
          if (!details) {
            await ctx.reply('–†–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.');
            return ctx.scene.leave();
          }
          details.title = state.title;
          details.description = ctx.message.text;
          await this.dataSource.manager.save(details);
          await ctx.reply(
            '‚úÖ –†–µ–∫–≤–∏–∑–∏—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!',
            Markup.inlineKeyboard([[Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º', 'payment_details')]])
          );
        } else {
          const paymentDetails = new PaymentDetails();
          paymentDetails.title = state.title;
          paymentDetails.description = ctx.message.text;
          await this.dataSource.manager.save(paymentDetails);
          await ctx.reply(
            '‚úÖ –†–µ–∫–≤–∏–∑–∏—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!',
            Markup.inlineKeyboard([[Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º', 'payment_details')]])
          );
        }
        return ctx.scene.leave();
      }
    );

    // --- WizardScene –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª—É–±–µ ---
    const clubInfoScene = new Scenes.WizardScene<BotContext>(
      'club-info',
      async (ctx: BotContext) => {
        if (!isAdmin(ctx.from?.id)) {
          await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
          return ctx.scene.leave();
        }

        const clubInfo = await this.dataSource.manager.findOne(ClubInfo, {
          where: {}, // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç —É—Å–ª–æ–≤–∏–π
          order: { id: 'DESC' }
        });

        if (clubInfo) {
          await ctx.reply(
            `–¢–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—É–±–µ:\n\n${clubInfo.description}\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:`,
            Markup.inlineKeyboard([[Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_club_info')]])
          );
        } else {
          await ctx.reply(
            '–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª—É–±–µ:',
            Markup.inlineKeyboard([[Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_club_info')]])
          );
        }
        return ctx.wizard.next();
      },
      async (ctx: BotContext) => {
        if (ctx.callbackQuery && 'data' in ctx.callbackQuery && ctx.callbackQuery.data === 'cancel_club_info') {
          await ctx.answerCbQuery();
          await ctx.reply('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞');
          return ctx.scene.leave();
        }

        if (!ctx.message || !('text' in ctx.message)) {
          await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.');
          return;
        }

        const clubInfo = new ClubInfo();
        clubInfo.description = ctx.message.text;
        await this.dataSource.manager.save(clubInfo);

        await ctx.reply(
          '‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—É–±–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!',
          Markup.inlineKeyboard([[Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'info')]])
        );
        return ctx.scene.leave();
      }
    );

    // –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å—Ü–µ–Ω –ø–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤—Å–µ—Ö —Å—Ü–µ–Ω
    this.stage = new Scenes.Stage<BotContext>([
      createEventWizard,
      editEventWizard,
      mainMenuScene,
      paymentDetailsScene,
      clubInfoScene
    ]);
    this.bot.use(session());
    this.bot.use(this.stage.middleware());

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û –∫–ª—É–±–µ"
    this.bot.action('info', async (ctx) => {
      await ctx.answerCbQuery();
      
      const clubInfo = await this.dataSource.manager.findOne(ClubInfo, {
        where: {},
        order: { id: 'DESC' }
      });

      const buttons = [[Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]];
      
      if (isAdmin(ctx.from?.id)) {
        buttons.push([Markup.button.callback('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', 'edit_club_info')]);
      }

      await ctx.editMessageText(
        clubInfo ? clubInfo.description : '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –µ—â–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞',
        Markup.inlineKeyboard(buttons)
      );
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª—É–±–µ
    this.bot.action('edit_club_info', async (ctx) => {
      if (!isAdmin(ctx.from?.id)) {
        await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        return;
      }

      await ctx.answerCbQuery();
      await ctx.scene.enter('club-info');
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    this.bot.action(/^publish_event_(\d+)$/, async (ctx) => {
      const eventId = parseInt(ctx.match[1]);
      const event = await this.dataSource.manager.findOneBy(Event, { id: eventId });
      
      if (!event) {
        await ctx.answerCbQuery('–í—Å—Ç—Ä–µ—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
      }

      if (!isEventComplete(event)) {
        await ctx.answerCbQuery('–ù–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π.');
        return;
      }

      event.isPublished = true;
      await this.dataSource.manager.save(event);
      
      await ctx.answerCbQuery('–í—Å—Ç—Ä–µ—á–∞ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!');
      await ctx.editMessageText(
        `–í—Å—Ç—Ä–µ—á–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!\n\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${event.title}\n–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n–û–ø–∏—Å–∞–Ω–∏–µ: ${event.description}\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
        `${event.allowOnSitePayment ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ\n` : ''}` +
        `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? `, –Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)}` : ''}\n` : ''}` +
        `\n–°—Ç–∞—Ç—É—Å: –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞`,
        Markup.inlineKeyboard([
          [Markup.button.callback('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', `edit_event_${event.id}`)]
        ])
      );
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    this.bot.action(/^edit_event_(\d+)$/, async (ctx) => {
      const eventId = parseInt(ctx.match[1]);
      await ctx.answerCbQuery();
      // @ts-ignore
      ctx.scene.enter('edit-event-wizard', { eventId });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
    this.bot.action('admin', async (ctx) => {
      if (!isAdmin(ctx.from?.id)) {
        await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        return;
      }
      await ctx.answerCbQuery();
      await ctx.editMessageText(
        '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:',
        Markup.inlineKeyboard([
          [Markup.button.callback('üìã –í—Å—Ç—Ä–µ—á–∏', 'admin_events'),
           Markup.button.callback('‚ûï –°–æ–∑–¥–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É', 'create_event')],
          [Markup.button.callback('üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã', 'payment_details')],
          [Markup.button.callback('‚ÑπÔ∏è –û –∫–ª—É–±–µ', 'info')],
          [Markup.button.callback('üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'main_menu')]
        ])
      );
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É"
    this.bot.action('create_event', async (ctx) => {
      if (!isAdmin(ctx.from?.id)) {
        await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        return;
      }
      await ctx.answerCbQuery();
      await ctx.scene.enter('create-event-wizard');
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã"
    this.bot.action('payment_details', async (ctx) => {
      if (!isAdmin(ctx.from?.id)) {
        await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        return;
      }

      const paymentDetails = await this.dataSource.manager.find(PaymentDetails);
      
      let message = '–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n\n';
      
      if (paymentDetails.length === 0) {
        message += '–†–µ–∫–≤–∏–∑–∏—Ç—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.';
      } else {
        paymentDetails.forEach((details, index) => {
          message += `${index + 1}. ${details.title}\n${details.description}\n\n`;
        });
      }

      await ctx.editMessageText(
        message,
        Markup.inlineKeyboard([
          [Markup.button.callback('‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã', 'add_payment_details')],
          [Markup.button.callback('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã', 'edit_payment_details')],
          [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'admin')]
        ])
      );
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã"
    this.bot.action('add_payment_details', async (ctx) => {
      if (!isAdmin(ctx.from?.id)) {
        await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        return;
      }
      await ctx.answerCbQuery();
      await ctx.scene.enter('payment-details', { editing: false });
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã"
    this.bot.action('edit_payment_details', async (ctx) => {
      if (!isAdmin(ctx.from?.id)) {
        await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        return;
      }

      const paymentDetails = await this.dataSource.manager.find(PaymentDetails);
      
      if (paymentDetails.length === 0) {
        await ctx.answerCbQuery('–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤');
        return;
      }

      const buttons = paymentDetails.map(details => [
        Markup.button.callback(
          `${details.title}`,
          `edit_payment_details_${details.id}`
        ),
        Markup.button.callback(
          'üóë',
          `delete_payment_details_${details.id}`
        )
      ]);

      buttons.push([Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'payment_details')]);

      await ctx.editMessageText(
        '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è:',
        Markup.inlineKeyboard(buttons)
      );
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
    this.bot.action(/^delete_payment_details_(\d+)$/, async (ctx) => {
      if (!isAdmin(ctx.from?.id)) {
        await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        return;
      }

      if (!ctx.match?.[1]) {
        await ctx.answerCbQuery('–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö');
        return;
      }

      const detailsId = parseInt(ctx.match[1]);
      const details = await this.dataSource.manager.findOneBy(PaymentDetails, { id: detailsId });

      if (!details) {
        await ctx.answerCbQuery('–†–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
      }

      await ctx.editMessageText(
        `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã "${details.title}"?`,
        Markup.inlineKeyboard([
          [Markup.button.callback('‚úÖ –î–∞', `confirm_delete_payment_details_${detailsId}`)],
          [Markup.button.callback('‚ùå –ù–µ—Ç', 'edit_payment_details')]
        ])
      );
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
    this.bot.action(/^confirm_delete_payment_details_(\d+)$/, async (ctx) => {
      if (!isAdmin(ctx.from?.id)) {
        await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        return;
      }

      if (!ctx.match?.[1]) {
        await ctx.answerCbQuery('–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö');
        return;
      }

      const detailsId = parseInt(ctx.match[1]);
      const details = await this.dataSource.manager.findOneBy(PaymentDetails, { id: detailsId });

      if (!details) {
        await ctx.answerCbQuery('–†–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
      }

      await this.dataSource.manager.remove(details);
      await ctx.answerCbQuery('–†–µ–∫–≤–∏–∑–∏—Ç—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã');

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
      const paymentDetails = await this.dataSource.manager.find(PaymentDetails);
      
      let message = '–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n\n';
      
      if (paymentDetails.length === 0) {
        message += '–†–µ–∫–≤–∏–∑–∏—Ç—ã –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.';
      } else {
        paymentDetails.forEach((details, index) => {
          message += `${index + 1}. ${details.title}\n${details.description}\n\n`;
        });
      }

      await ctx.editMessageText(
        message,
        Markup.inlineKeyboard([
          [Markup.button.callback('‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã', 'add_payment_details')],
          [Markup.button.callback('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã', 'edit_payment_details')],
          [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'admin')]
        ])
      );
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í—Å—Ç—Ä–µ—á–∏"
    this.bot.action('admin_events', async (ctx) => {
      await ctx.answerCbQuery();
      await ctx.editMessageText(
        '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤—Å—Ç—Ä–µ—á:',
        Markup.inlineKeyboard([
          [Markup.button.callback('üìÖ –ë–ª–∏–∂–∞–π—à–∏–µ', 'admin_upcoming_events'),
           Markup.button.callback('üìÖ –ü—Ä–æ—à–µ–¥—à–∏–µ', 'admin_past_events')],
          [Markup.button.callback('üìÖ –í—Å–µ', 'admin_all_events')],
          [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'admin')]
        ])
      );
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≤—Å—Ç—Ä–µ—á
    this.bot.action('admin_upcoming_events', async (ctx) => {
      await ctx.answerCbQuery();
      const now = new Date();
      const events = await this.dataSource.manager.find(Event, {
        where: {
          startDate: MoreThan(now)
        },
        order: {
          startDate: 'ASC'
        }
      });
      await this.sendEventsList(ctx, events, '–ë–ª–∏–∂–∞–π—à–∏–µ –≤—Å—Ç—Ä–µ—á–∏');
    });

    this.bot.action('admin_past_events', async (ctx) => {
      await ctx.answerCbQuery();
      const now = new Date();
      const events = await this.dataSource.manager.find(Event, {
        where: {
          startDate: LessThan(now)
        },
        order: {
          startDate: 'DESC'
        }
      });
      await this.sendEventsList(ctx, events, '–ü—Ä–æ—à–µ–¥—à–∏–µ –≤—Å—Ç—Ä–µ—á–∏');
    });

    this.bot.action('admin_all_events', async (ctx) => {
      await ctx.answerCbQuery();
      const events = await this.dataSource.manager.find(Event, {
        order: {
          startDate: 'DESC'
        }
      });
      await this.sendEventsList(ctx, events, '–í—Å–µ –≤—Å—Ç—Ä–µ—á–∏');
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    this.bot.action('main_menu', async (ctx) => {
      await ctx.answerCbQuery();
      const buttons = [
        [Markup.button.callback('–ë–ª–∏–∂–∞–π—à–∏–µ –≤—Å—Ç—Ä–µ—á–∏', 'new_events'), Markup.button.callback('–ú–æ–∏ –≤—Å—Ç—Ä–µ—á–∏', 'my_events')],
        [Markup.button.callback('–û—Ç–∑—ã–≤—ã', 'reviews'), Markup.button.callback('–û –∫–ª—É–±–µ', 'info')],
        [Markup.button.callback('–ü–æ–º–æ—â—å', 'help')]
      ];
      if (isAdmin(ctx.from?.id)) {
        buttons.push([Markup.button.callback('–ê–¥–º–∏–Ω–∫–∞', 'admin')]);
      }
      await ctx.editMessageText(
        '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:',
        Markup.inlineKeyboard(buttons)
      );
    });

    this.bot.action('new_events', async (ctx) => {
      const now = new Date();
      const events = await this.dataSource.manager.find(Event, {
        where: {
          startDate: MoreThan(now),
          isPublished: true,
          isCancelled: false
        },
        relations: ['participants'],
        order: {
          startDate: 'ASC'
        }
      });

      if (events.length === 0) {
        await ctx.reply('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –≤—Å—Ç—Ä–µ—á.');
        return;
      }

      for (const event of events) {
        const isParticipant = event.participants.some((p: EventParticipant) => p.user.telegramId === ctx.from?.id);
        const buttons = [
          [Markup.button.callback('üìã –ü–æ–¥—Ä–æ–±–Ω–µ–µ', `event_details_${event.id}`)]
        ];

        if (isParticipant) {
          buttons.push([
            Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ', `leave_event_${event.id}`),
            Markup.button.callback('üí≥ –û–ø–ª–∞—Ç–∏—Ç—å', `pay_event_${event.id}`)
          ]);
        } else {
          buttons.push([Markup.button.callback('‚úÖ –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ', `join_event_${event.id}`)]);
        }

        await ctx.reply(
          `üìÖ ${event.title}\n` +
          `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
          `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
          `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
          `${event.allowOnSitePayment ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ\n` : ''}` +
          `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? `, –Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)}` : ''}\n` : ''}` +
          `\n–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : '–ß–µ—Ä–Ω–æ–≤–∏–∫'}`,
          Markup.inlineKeyboard(buttons)
        );
      }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —É—á–∞—Å—Ç–∏—è
    this.bot.action(/^join_event_(\d+)$/, async (ctx) => {
      const eventId = parseInt(ctx.match[1]);
      const event = await this.dataSource.manager.findOne(Event, {
        where: { id: eventId },
        relations: ['participants']
      });

      if (!event) {
        await ctx.answerCbQuery('–í—Å—Ç—Ä–µ—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
      }

      const isParticipant = event.participants.some((p: EventParticipant) => p.user.telegramId === ctx.from?.id);
      if (isParticipant) {
        await ctx.answerCbQuery('–í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —ç—Ç–æ–π –≤—Å—Ç—Ä–µ—á–µ');
        return;
      }

      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—Å—Ç—Ä–µ—á–µ
      let messageText = `üìÖ ${event.title}\n\n` +
        `üìù –û–ø–∏—Å–∞–Ω–∏–µ:\n${event.description}\n\n` +
        `üïí –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
        `üïï –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
        `üìç –ú–µ—Å—Ç–æ: ${event.location || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n\n` +
        `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
        `${event.allowOnSitePayment ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ\n` : ''}` +
        `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? `, –Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)}` : ''}\n` : ''}` +
        `\n–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ–ø–ª–∞—Ç—ã:`;

      // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ–ø–ª–∞—Ç—ã
      const buttons = [];

      const now = new Date();
      if (event.allowOnSitePayment) {
        buttons.push([Markup.button.callback(`üíµ –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ (${event.fullPaymentAmount} –≥—Ä–Ω)`, `payment_onsite_${event.id}`)]);
      }

      if (event.advancePaymentAmount && event.advancePaymentDeadline && now < event.advancePaymentDeadline) {
        buttons.push([Markup.button.callback(`üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –∑–∞—Ä–∞–Ω–µ–µ (${event.advancePaymentAmount} –≥—Ä–Ω)`, `payment_advance_${event.id}`)]);
        buttons.push([Markup.button.callback('‚è∞ –ù–∞–ø–æ–º–Ω–∏—Ç—å –ø–æ–∑–∂–µ', `remind_later_${event.id}`)]);
      } else if (event.fullPaymentAmount && (!event.advancePaymentAmount || (event.advancePaymentDeadline && now >= event.advancePaymentDeadline))) {
        buttons.push([Markup.button.callback(`üí≥ –ü–æ–ª–Ω–∞—è –æ–ø–ª–∞—Ç–∞ (${event.fullPaymentAmount} –≥—Ä–Ω)`, `payment_full_${event.id}`)]);
      }

      buttons.push([Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ', `cancel_join_${event.id}`)]);

      await ctx.editMessageText(messageText, Markup.inlineKeyboard(buttons));
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ–ø–ª–∞—Ç—ã
    this.bot.action(/^payment_onsite_(\d+)$/, async (ctx) => {
      const eventId = parseInt(ctx.match[1]);
      await this.joinEvent(ctx, eventId, ParticipationStatus.PAYMENT_ON_SITE);
    });

    this.bot.action(/^payment_partial_(\d+)$/, async (ctx) => {
      const eventId = parseInt(ctx.match[1]);
      await this.joinEvent(ctx, eventId, ParticipationStatus.PENDING_PAYMENT);
    });

    this.bot.action(/^payment_advance_(\d+)$/, async (ctx) => {
      const eventId = parseInt(ctx.match[1]);
      await this.joinEvent(ctx, eventId, ParticipationStatus.PENDING_PAYMENT);
    });

    this.bot.action(/^payment_full_(\d+)$/, async (ctx) => {
      const eventId = parseInt(ctx.match[1]);
      await this.joinEvent(ctx, eventId, ParticipationStatus.PENDING_PAYMENT);
    });

    this.bot.action(/^cancel_join_(\d+)$/, async (ctx) => {
      await ctx.answerCbQuery();
      await ctx.editMessageText(
        '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞',
        Markup.inlineKeyboard([[Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –≤—Å—Ç—Ä–µ—á', 'new_events')]])
      );
    });

    this.bot.action(/^leave_event_(\d+)$/, async (ctx) => {
      const eventId = parseInt(ctx.match[1]);
      const participant = await this.dataSource.manager.findOne(EventParticipant, {
        where: {
          event: { id: eventId },
          user: { telegramId: ctx.from?.id }
        }
      });

      if (!participant) {
        await ctx.answerCbQuery('–í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —ç—Ç–æ–π –≤—Å—Ç—Ä–µ—á–µ');
        return;
      }

      await this.dataSource.manager.remove(participant);
      await ctx.answerCbQuery('–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É—á–∞—Å—Ç–∏–µ –≤–æ –≤—Å—Ç—Ä–µ—á–µ');

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      const event = await this.dataSource.manager.findOne(Event, {
        where: { id: eventId },
        relations: ['participants']
      });

      if (event) {
        const buttons = [
          [Markup.button.callback('üìã –ü–æ–¥—Ä–æ–±–Ω–µ–µ', `event_details_${event.id}`)],
          [Markup.button.callback('‚úÖ –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ', `join_event_${event.id}`)]
        ];

        await ctx.editMessageText(
          `üìÖ ${event.title}\n` +
          `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
          `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
          `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
          `${event.allowOnSitePayment ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ\n` : ''}` +
          `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? `, –Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)}` : ''}\n` : ''}` +
          `\n–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : '–ß–µ—Ä–Ω–æ–≤–∏–∫'}`,
          Markup.inlineKeyboard(buttons)
        );
      }
    });

    this.bot.action(/^event_details_(\d+)$/, async (ctx) => {
      const eventId = parseInt(ctx.match[1]);
      const event = await this.dataSource.manager.findOne(Event, {
        where: { id: eventId },
        relations: ['participants']
      });

      if (!event) {
        await ctx.answerCbQuery('–í—Å—Ç—Ä–µ—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
      }

      const isParticipant = event.participants.some((p: EventParticipant) => p.user.telegramId === ctx.from?.id);
      const buttons = [
        [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É', 'new_events')]
      ];

      if (isParticipant) {
        buttons.push([
          Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ', `leave_event_${event.id}`),
          Markup.button.callback('üí≥ –û–ø–ª–∞—Ç–∏—Ç—å', `pay_event_${event.id}`)
        ]);
      } else {
        buttons.push([Markup.button.callback('‚úÖ –ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ', `join_event_${event.id}`)]);
      }

      await ctx.reply(
        `üìÖ ${event.title}\n\n` +
        `üìù –û–ø–∏—Å–∞–Ω–∏–µ:\n${event.description}\n\n` +
        `üïí –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
        `üïï –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
        `üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${event.participants.length}`,
        Markup.inlineKeyboard(buttons)
      );
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û–ø–ª–∞—Ç–∏—Ç—å"
    this.bot.action(/^pay_event_(\d+)$/, async (ctx) => {
      const eventId = parseInt(ctx.match[1]);
      const event = await this.dataSource.manager.findOneBy(Event, { id: eventId });
      
      if (!event) {
        await ctx.answerCbQuery('–í—Å—Ç—Ä–µ—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
      }

      const paymentDetails = await this.dataSource.manager.find(PaymentDetails);
      
      if (paymentDetails.length === 0) {
        await ctx.answerCbQuery('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã');
        return;
      }

      const buttons = paymentDetails.map(details => [
        Markup.button.callback(
          details.title,
          `select_payment_method_${eventId}_${details.id}`
        )
      ]);

      buttons.push([Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', `event_${eventId}`)]);

      await ctx.editMessageText(
        '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:',
        Markup.inlineKeyboard(buttons)
      );
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
    this.bot.action(/^select_payment_method_(\d+)_(\d+)$/, async (ctx) => {
      const eventId = parseInt(ctx.match[1]);
      const detailsId = parseInt(ctx.match[2]);
      
      const event = await this.dataSource.manager.findOneBy(Event, { id: eventId });
      const paymentDetails = await this.dataSource.manager.findOneBy(PaymentDetails, { id: detailsId });
      
      if (!event || !paymentDetails) {
        await ctx.answerCbQuery('–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
      }

      const amount = event.advancePaymentAmount || event.fullPaymentAmount;
      
      await ctx.editMessageText(
        `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n\n` +
        `${paymentDetails.description}\n\n` +
        `–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: ${amount} –≥—Ä–Ω.\n\n` +
        `–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–Ø –æ–ø–ª–∞—Ç–∏–ª"`,
        Markup.inlineKeyboard([
          [Markup.button.callback('‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª', `confirm_payment_${eventId}_${detailsId}`)],
          [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', `pay_event_${eventId}`)]
        ])
      );
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
    this.bot.action(/^confirm_payment_(\d+)_(\d+)$/, async (ctx) => {
      const eventId = parseInt(ctx.match[1]);
      const detailsId = parseInt(ctx.match[2]);
      
      const event = await this.dataSource.manager.findOneBy(Event, { id: eventId });
      const paymentDetails = await this.dataSource.manager.findOneBy(PaymentDetails, { id: detailsId });
      
      if (!event || !paymentDetails) {
        await ctx.answerCbQuery('–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–∏—è
      const participation = await this.dataSource.manager.findOne(EventParticipant, {
        where: {
          event: { id: eventId },
          user: { telegramId: ctx.from.id }
        }
      });

      if (participation) {
        participation.status = ParticipationStatus.PAYMENT_CONFIRMED;
        await this.dataSource.manager.save(participation);
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await ctx.editMessageText(
        '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É! –ö–∞–∫ —Ç–æ–ª—å–∫–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç, —á—Ç–æ –æ–ø–ª–∞—Ç–∞ –ø—Ä–∏—à–ª–∞, –º—ã —Å—Ä–∞–∑—É –∂–µ –í–∞—Å —É–≤–µ–¥–æ–º–∏–º.'
      );

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
      const adminIds = process.env.ADMIN_IDS?.split(',').map(id => parseInt(id)) || [];
      for (const adminId of adminIds) {
        await this.bot.telegram.sendMessage(
          adminId,
          `üîî –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–ø–ª–∞—Ç–µ!\n\n` +
          `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.first_name} (${ctx.from.username || '–±–µ–∑ username'}) –æ–ø–ª–∞—Ç–∏–ª –≤—Å—Ç—Ä–µ—á—É "${event.title}"\n` +
          `–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: ${paymentDetails.title}\n` +
          `–°—É–º–º–∞: ${event.advancePaymentAmount || event.fullPaymentAmount} –≥—Ä–Ω.`,
          Markup.inlineKeyboard([
            [Markup.button.callback('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É', `verify_payment_${eventId}_${ctx.from.id}`)]
          ])
        );
      }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –∞–¥–º–∏–Ω–æ–º
    this.bot.action(/^verify_payment_(\d+)_(\d+)$/, async (ctx) => {
      if (!isAdmin(ctx.from?.id)) {
        await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        return;
      }

      const eventId = parseInt(ctx.match[1]);
      const userId = parseInt(ctx.match[2]);
      
      const event = await this.dataSource.manager.findOneBy(Event, { id: eventId });
      const participation = await this.dataSource.manager.findOne(EventParticipant, {
        where: {
          event: { id: eventId },
          user: { telegramId: userId }
        }
      });
      
      if (!event || !participation) {
        await ctx.answerCbQuery('–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–∏—è
      participation.status = ParticipationStatus.PAYMENT_CONFIRMED;
      await this.dataSource.manager.save(participation);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await this.bot.telegram.sendMessage(
        userId,
        `‚úÖ –í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ –∑–∞ –≤—Å—Ç—Ä–µ—á—É "${event.title}" –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\n\n` +
        `–ñ–¥–µ–º –≤–∞—Å –Ω–∞ –≤—Å—Ç—Ä–µ—á–µ!`
      );

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
      await ctx.editMessageText(
        `‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\n\n` +
        `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${participation.user.firstName} (${participation.user.username || '–±–µ–∑ username'})\n` +
        `–í—Å—Ç—Ä–µ—á–∞: ${event.title}\n` +
        `–°—Ç–∞—Ç—É—Å: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ`
      );
    });

    this.bot.action('my_events', async (ctx) => {
      await ctx.answerCbQuery();
      await ctx.editMessageText(
        '–ú–æ–∏ –≤—Å—Ç—Ä–µ—á–∏:',
        Markup.inlineKeyboard([
          [Markup.button.callback('–ë–ª–∏–∂–∞–π—à–∏–µ', 'my_upcoming_events')],
          [Markup.button.callback('–ü—Ä–æ—à–µ–¥—à–∏–µ', 'my_past_events')],
          [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'main_menu')]
        ])
      );
    });

    this.bot.action('my_upcoming_events', async (ctx) => {
      const now = new Date();
      const events = await this.dataSource.manager.find(Event, {
        where: {
          startDate: MoreThan(now),
          isPublished: true,
          isCancelled: false,
          participants: {
            user: {
              telegramId: ctx.from?.id
            }
          }
        },
        relations: ['participants'],
        order: {
          startDate: 'ASC'
        }
      });

      if (events.length === 0) {
        await ctx.editMessageText(
          '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –≤—Å—Ç—Ä–µ—á.',
          Markup.inlineKeyboard([[Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'my_events')]])
        );
        return;
      }

      let messageText = '–í–∞—à–∏ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –≤—Å—Ç—Ä–µ—á–∏:\n\n';
      for (const event of events) {
        const participant = event.participants.find(p => p.user.telegramId === ctx.from?.id);
        messageText += `üìÖ ${event.title}\n` +
          `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
          `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
          `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
          `${event.allowOnSitePayment ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ\n` : ''}` +
          `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? `, –Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)}` : ''}\n` : ''}` +
          `–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: ${participant?.status === ParticipationStatus.PAYMENT_CONFIRMED ? '‚úÖ –û–ø–ª–∞—á–µ–Ω–æ' : '‚ùå –ù–µ –æ–ø–ª–∞—á–µ–Ω–æ'}\n\n`;
      }

      const buttons = events.map(event => [
        Markup.button.callback(`üìã –ü–æ–¥—Ä–æ–±–Ω–µ–µ "${event.title}"`, `event_details_${event.id}`)
      ]);
      buttons.push([Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'my_events')]);

      await ctx.editMessageText(
        messageText,
        Markup.inlineKeyboard(buttons)
      );
    });

    this.bot.action('my_past_events', async (ctx) => {
      const now = new Date();
      const events = await this.dataSource.manager.find(Event, {
        where: {
          startDate: LessThan(now),
          isPublished: true,
          participants: {
            user: {
              telegramId: ctx.from?.id
            }
          }
        },
        relations: ['participants'],
        order: {
          startDate: 'DESC'
        }
      });

      if (events.length === 0) {
        await ctx.editMessageText(
          '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–æ—à–µ–¥—à–∏—Ö –≤—Å—Ç—Ä–µ—á.',
          Markup.inlineKeyboard([[Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'my_events')]])
        );
        return;
      }

      let messageText = '–í–∞—à–∏ –ø—Ä–æ—à–µ–¥—à–∏–µ –≤—Å—Ç—Ä–µ—á–∏:\n\n';
      for (const event of events) {
        const participant = event.participants.find(p => p.user.telegramId === ctx.from?.id);
        messageText += `üìÖ ${event.title}\n` +
          `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
          `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
          `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
          `${event.allowOnSitePayment ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ\n` : ''}` +
          `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? `, –Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)}` : ''}\n` : ''}` +
          `–°—Ç–∞—Ç—É—Å: ${event.isCancelled ? '‚ùå –û—Ç–º–µ–Ω–µ–Ω–∞' : '‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∞'}\n` +
          `–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: ${participant?.status === ParticipationStatus.PAYMENT_CONFIRMED ? '‚úÖ –û–ø–ª–∞—á–µ–Ω–æ' : '‚ùå –ù–µ –æ–ø–ª–∞—á–µ–Ω–æ'}\n\n`;
      }

      const buttons = events.map(event => [
        Markup.button.callback(`üìã –ü–æ–¥—Ä–æ–±–Ω–µ–µ "${event.title}"`, `event_details_${event.id}`)
      ]);
      buttons.push([Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'my_events')]);

      await ctx.editMessageText(
        messageText,
        Markup.inlineKeyboard(buttons)
      );
    });

    this.bot.action(/^remind_later_(\d+)$/, async (ctx) => {
      const eventId = parseInt(ctx.match[1]);
      await ctx.answerCbQuery('–ú—ã –Ω–∞–ø–æ–º–Ω–∏–º –≤–∞–º –æ–± –æ–ø–ª–∞—Ç–µ –ø–æ–∑–∂–µ');
      await ctx.editMessageText(
        '–ú—ã –Ω–∞–ø–æ–º–Ω–∏–º –≤–∞–º –æ–± –æ–ø–ª–∞—Ç–µ –ø–æ–∑–∂–µ. –í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –≤—Å—Ç—Ä–µ—á.',
        Markup.inlineKeyboard([[Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –≤—Å—Ç—Ä–µ—á', 'new_events')]])
      );
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    this.bot.action(/^edit_payment_details_(\d+)$/, async (ctx) => {
      if (!isAdmin(ctx.from?.id)) {
        await ctx.answerCbQuery('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        return;
      }

      if (!ctx.match?.[1]) {
        await ctx.answerCbQuery('–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö');
        return;
      }

      const detailsId = parseInt(ctx.match[1]);
      const details = await this.dataSource.manager.findOneBy(PaymentDetails, { id: detailsId });

      if (!details) {
        await ctx.answerCbQuery('–†–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
      }

      await ctx.scene.enter('payment-details', { 
        detailsId,
        editing: true,
        title: details.title
      });
    });
  }

  private async sendEventsList(ctx: any, events: Event[], title: string) {
    if (events.length === 0) {
      await ctx.editMessageText(
        `${title}:\n\n–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç`,
        Markup.inlineKeyboard([[Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'admin_events')]])
      );
      return;
    }

    const messageText = events.map(event => {
      return `üìÖ ${event.title}\n` +
             `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
             `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
             `–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : 'üìù –ß–µ—Ä–Ω–æ–≤–∏–∫'}\n` +
             `–û—Ç–º–µ–Ω–µ–Ω–∞: ${event.isCancelled ? '‚ùå –î–∞' : '‚úÖ –ù–µ—Ç'}\n` +
             `ID: ${event.id}\n`;
    }).join('\n');

    const buttons = events.map(event => [
      Markup.button.callback(`‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å "${event.title}"`, `edit_event_${event.id}`)
    ]);

    buttons.push([Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'admin_events')]);

    await ctx.editMessageText(
      `${title}:\n\n${messageText}`,
      Markup.inlineKeyboard(buttons)
    );
  }

  private async joinEvent(ctx: any, eventId: number, status: ParticipationStatus) {
    const event = await this.dataSource.manager.findOne(Event, {
      where: { id: eventId },
      relations: ['participants']
    });

    if (!event) {
      await ctx.answerCbQuery('–í—Å—Ç—Ä–µ—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }

    let user = await this.dataSource.manager.findOne(User, { where: { telegramId: ctx.from!.id } });
    if (!user) {
      user = new User();
      user.telegramId = ctx.from!.id;
      user.username = ctx.from?.username || null;
      user.firstName = ctx.from?.first_name || null;
      user.lastName = ctx.from?.last_name || null;
      await this.dataSource.manager.save(user);
    }

    const participant = new EventParticipant();
    participant.user = user;
    participant.event = event;
    participant.status = status;
    await this.dataSource.manager.save(participant);

    await ctx.answerCbQuery('–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ –≤—Å—Ç—Ä–µ—á—É!');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const buttons = [
      [Markup.button.callback('üìã –ü–æ–¥—Ä–æ–±–Ω–µ–µ', `event_details_${event.id}`)],
      [
        Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ', `leave_event_${event.id}`),
        Markup.button.callback('üí≥ –û–ø–ª–∞—Ç–∏—Ç—å', `pay_event_${event.id}`)
      ]
    ];

    await ctx.editMessageText(
      `üìÖ ${event.title}\n` +
      `–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: ${formatDate(event.startDate)}\n` +
      `–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${formatDate(event.endDate)}\n` +
      `–°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã:\n` +
      `${event.allowOnSitePayment ? `‚Ä¢ ${event.fullPaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ\n` : ''}` +
      `${event.advancePaymentAmount ? `‚Ä¢ ${event.advancePaymentAmount} –≥—Ä–Ω. –≤ —Å–ª—É—á–∞–µ –æ–ø–ª–∞—Ç—ã –∑–∞—Ä–∞–Ω–µ–µ${event.advancePaymentDeadline ? `, –Ω–µ –ø–æ–∑–¥–Ω–µ–µ ${formatDate(event.advancePaymentDeadline)}` : ''}\n` : ''}` +
      `\n–°—Ç–∞—Ç—É—Å: ${event.isPublished ? '–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞' : '–ß–µ—Ä–Ω–æ–≤–∏–∫'}`,
      Markup.inlineKeyboard(buttons)
    );
  }

  public getWebhookCallback(path: string) {
    return this.bot.webhookCallback(path);
  }
  
  public async setWebhook(url: string) {
    await this.bot.telegram.setWebhook(url);
  }

  private log(message: string, data?: any): void {
    if (this.loggingConfig.verbose) {
      if (data) {
        console.log(`[BOT] ${message}`, data);
      } else {
        console.log(`[BOT] ${message}`);
      }
    }
  }

  public async launchWebhook(webhookUrl: string, port: number = 3000): Promise<void> {
    if (!this.isInitialized) {
      throw new Error('Bot not initialized. Call init() first');
    }

    try {
      await this.bot.telegram.setWebhook(webhookUrl);
      await this.bot.launch({
        webhook: {
          domain: webhookUrl,
          port: port
        }
      });
      this.log(`Bot started in webhook mode on ${webhookUrl}`);
    } catch (error) {
      console.error('Webhook launch failed:', error);
      throw error;
    }
  }

  public async launchPolling(): Promise<void> {
    if (!this.isInitialized) {
      throw new Error('Bot not initialized. Call init() first');
    }

    try {
      await this.bot.launch();
      this.log('Bot started in polling mode');
    } catch (error) {
      console.error('Polling launch failed:', error);
      throw error;
    }
  }

  public init(commands: Command[], subscribers?: MessageSubscriber[]): void {
    if (this.isInitialized) {
      throw new Error('Bot already initialized');
    }

    this.registerCommands(commands);
    this.registerSubscribers(subscribers || []);
    this.isInitialized = true;
    this.log('Bot initialized');
  }

  public stop(reason?: string): void {
    if (reason) {
      console.log(`Stopping bot: ${reason}`);
    }
    this.bot.stop();
  }

  private registerCommands(commands: Command[]): void {
    commands.forEach(command => {
      this.bot.command(command.name, ctx => {
        this.log(`Command executed: ${command.name}`);
        return command.execute(ctx);
      });
    });
  }

  private registerSubscribers(subscribers: MessageSubscriber[]): void {
    subscribers.forEach(subscriber => {
      this.bot.on(subscriber.messageType, ctx => {
        this.log(`Message received: ${subscriber.messageType}`);
        return subscriber.handle(ctx);
      });
    });
  }

  public addStartMenu() {
    this.bot.start((ctx) => {
      const buttons = [
        [Markup.button.callback('–ë–ª–∏–∂–∞–π—à–∏–µ –≤—Å—Ç—Ä–µ—á–∏', 'new_events'), Markup.button.callback('–ú–æ–∏ –≤—Å—Ç—Ä–µ—á–∏', 'my_events')],
        [Markup.button.callback('–û—Ç–∑—ã–≤—ã', 'reviews'), Markup.button.callback('–û –∫–ª—É–±–µ', 'info')],
        [Markup.button.callback('–ü–æ–º–æ—â—å', 'help')]
      ];
      if (isAdmin(ctx.from?.id)) {
        buttons.push([Markup.button.callback('–ê–¥–º–∏–Ω–∫–∞', 'admin')]);
      }
      return ctx.reply(
        '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:' +
        '\n—Ç–≤–æ–π ID: ' + ctx.from?.id +
        '\nID –∞–¥–º–∏–Ω–æ–≤: ' + ADMINS.join(', '),
        Markup.inlineKeyboard(buttons)
      );
    });

    this.bot.command('events', async (ctx) => {
      await ctx.reply(
        '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤—Å—Ç—Ä–µ—á:',
        Markup.inlineKeyboard([
          [Markup.button.callback('–ë–ª–∏–∂–∞–π—à–∏–µ', 'admin_upcoming_events')],
          [Markup.button.callback('–ü—Ä–æ—à–µ–¥—à–∏–µ', 'admin_past_events')],
          [Markup.button.callback('–í—Å–µ', 'admin_all_events')]
        ])
      );
    });

    this.bot.command('my_events', async (ctx) => {
      await ctx.reply(
        '–ú–æ–∏ –≤—Å—Ç—Ä–µ—á–∏:',
        Markup.inlineKeyboard([
          [Markup.button.callback('–ë–ª–∏–∂–∞–π—à–∏–µ', 'my_upcoming_events')],
          [Markup.button.callback('–ü—Ä–æ—à–µ–¥—à–∏–µ', 'my_past_events')]
        ])
      );
    });

    this.bot.command('help', async (ctx) => {
      await ctx.reply(
        'ü§ñ –ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:\n\n' +
        '/start - –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n' +
        '/events - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –≤—Å—Ç—Ä–µ—á\n' +
        '/my_events - –ø—Ä–æ—Å–º–æ—Ç—Ä –º–æ–∏—Ö –≤—Å—Ç—Ä–µ—á\n' +
        '/help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n' +
        '–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n' +
        '‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á\n' +
        '‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –≤—Å—Ç—Ä–µ—á\n' +
        '‚Ä¢ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∏ –æ—Ç–º–µ–Ω–∞ –≤—Å—Ç—Ä–µ—á'
      );
    });

  }

  private setupErrorHandling(): void {
    this.bot.catch((err: any, ctx: Context) => {
      console.error(`Error for ${ctx.updateType}:`, err);
      ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞').catch(console.error);
    });
  }
}